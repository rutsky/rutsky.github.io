{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["orgName","removeOrgName","refLabel","startsWith","substring","length","GithubUserIcon","props","login","href","undefined","react_default","a","createElement","style","width","height","borderRadius","margin","title","alt","src","concat","Assignment","classes","assignment","solutions","rosterName","id","ids","Object","keys","sort","b","localeCompare","Paper_default","className","root","tableWrapper","Table_default","table","TableHead_default","TableRow_default","TableCell_default","padding","TableBody_default","map","rowIdx","s","indexCell","nameCell","display","alignItems","repoURL","prCell","reviewCell","ciStatusCell","tagsCell","stageCell","pullRequests","prs","isOpen","pr","state","some","filter","closedAt","slice","getActualPullRequests","background","key","number","marginRight","index_esm","icon","GitPullRequest","url","headLabel","baseLabel","filteredReviews","reviews","r","includes","prColor","prTitle","console","assert","merged","color","plural","authorCommits","commentsPerUser","user","idx","reviewer","Check","X","prInfo","reviewers","statuses","context","PrimitiveDot","targetURL","labels","l","name","backgroundColor","project","columnName","branches","withStyles","theme","App","error","data","selectedIdx","handleChange","event","_this","setState","fetch","response","json","log","this","semesters","_context","t0","_this$state","toString","assignmentIds","assignments","tabs","Tab_default","label","AppBar_default","position","Tabs_default","value","onChange","indicatorColor","textColor","scrollable","scrollButtons","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9411c083.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport plural from 'plural-ru';\nimport Octicon, {Check, X, GitPullRequest, PrimitiveDot} from '@githubprimer/octicons-react'\nimport { withStyles } from '@material-ui/core/styles';\n\nconst orgName = \"cpp-practice\";\n\nfunction removeOrgName(refLabel) {\n  if (refLabel.startsWith(orgName + \":\")) {\n    return refLabel.substring(orgName.length + 1);\n  } else {\n    return refLabel;\n  }\n}\n\nfunction GithubUserIcon(props) {\n  const { login } = props;\n  let { href } = props;\n  if (href === undefined) {\n    href = \"https://github.com/\" + login;\n  }\n\n  return (\n    <a href={href}>\n      <img\n        style={{width: \"20px\", height: \"20px\", borderRadius: \"3px\", margin: \"3px\"}}\n        title={\"@\" + login}\n        alt={\"@\" + login}\n        src={`https://avatars.githubusercontent.com/${login}?size=20`}\n      />\n    </a>\n  );\n}\n\nGithubUserIcon.propTypes = {\n  login: PropTypes.string.isRequired,\n  href: PropTypes.string,\n};\n\nfunction prInfo(pr) {\n  const filteredReviews = pr.reviews.filter(r => [\"CHANGES_REQUESTED\", \"APPROVED\"].includes(r.state));\n\n  var prColor = null, prTitle = null;\n  if (pr.state === \"open\") {\n    prColor = \"#2cbe4e\";\n    prTitle = pr.state;\n  } else {\n    console.assert(pr.state === \"closed\");\n    if (pr.merged) {\n      prColor = \"#6f42c1\";\n      prTitle = \"merged\";\n    } else {\n      prColor = \"#cb2431\";\n      prTitle = \"closed\";\n    }\n  }\n\n  function decorateDestBranch(b) {\n    if (b !== \"check\") {\n      return <span style={{background: \"yellow\"}}>{b}</span>;\n    } else {\n      return b;\n    }\n  }\n\n  return (\n    <div key={pr.number}>\n      <div style={{display: \"flex\", alignItems: \"center\"}}>\n        <span title={prTitle} style={{marginRight: \"3px\", color: prColor}}><Octicon icon={GitPullRequest} /></span>\n        <span>\n          <a href={pr.url}>{removeOrgName(pr.headLabel)}->{decorateDestBranch(removeOrgName(pr.baseLabel))}</a>{\" \"}\n          ({plural(pr.authorCommits, '%d коммит', '%d коммита', '%d коммитов')})\n        </span>\n      </div>\n\n      <div style={{display: \"flex\", alignItems: \"center\"}}>\n        Комментарии: {Object.keys(pr.commentsPerUser).length > 0 ?\n          Object.keys(pr.commentsPerUser).map(\n            user => (\n                <span style={{display: \"flex\", alignItems: \"center\"}} key={user}>\n                  <GithubUserIcon key={user} login={user} />\n                  <span>{pr.commentsPerUser[user]}</span>\n                </span>\n              ))\n          : \"нет\"\n        }\n      </div>\n\n      <div style={{display: \"flex\", alignItems: \"center\"}}>\n        Ревью: {filteredReviews.length > 0 ?\n          filteredReviews.map((r, idx) => (\n                <span style={{display: \"flex\", alignItems: \"center\"}} key={idx}>\n                  <GithubUserIcon login={r.reviewer} />\n                  <a href={r.url}><span style={{color: r.state === \"APPROVED\" ? \"#28a745\": \"#cb2431\"}}><Octicon icon={r.state === \"APPROVED\" ? Check: X} /></span></a>\n                </span>\n              ))\n          : \"нет\"\n        }\n      </div>\n    </div>\n  );\n}\n\nfunction getActualPullRequests(prs) {\n  const isOpen = pr => pr.state === \"open\";\n\n  if (prs.length === 0) {\n    return prs;\n  } else if (prs.some(isOpen)) {\n    // If there is any open pull requests, return all open pull requests.\n    return prs.filter(isOpen);\n  } else {\n    // Return most recently closed pull request.\n    return prs.sort((a, b) => b.closedAt - a.closedAt).slice(0, 1)\n  }\n}\n\nfunction Assignment(props) {\n  const { classes } = props;\n  const { assignment } = props;\n  const { solutions } = assignment;\n\n  function rosterName(id) {\n    return \"studentRosterName\" in solutions[id] ? solutions[id][\"studentRosterName\"] : \"\";\n  }\n\n  const ids = Object.keys(solutions);\n  ids.sort((a, b) => rosterName(a).localeCompare(rosterName(b)));\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell padding=\"dense\">#</TableCell>\n              <TableCell padding=\"dense\">Имя</TableCell>\n              <TableCell>Pull Request</TableCell>\n              <TableCell>Запрошен Review</TableCell>\n              <TableCell>CI статус</TableCell>\n              <TableCell>Теги</TableCell>\n              <TableCell>Стадия</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ids.map((id, rowIdx) => {\n              const s = assignment.solutions[id];\n\n              const indexCell = (\n                  <span>{rowIdx + 1}</span>\n              );\n\n              const nameCell = (\n                <div>\n                  <div style={{display: \"flex\", alignItems: \"center\"}}>\n                    <GithubUserIcon login={id} href={s.repoURL}></GithubUserIcon>\n                    <a href={`http://github.com/${id}`}>@{id}</a>\n                  </div>\n                  <div>{\"studentRosterName\" in s ? s[\"studentRosterName\"] : \"\"}</div>\n                </div>\n              );\n\n              var prCell = null;\n              var reviewCell = null;\n              var ciStatusCell = null;\n              var tagsCell = null;\n              var stageCell = null;\n              var pullRequests = getActualPullRequests(s.pullRequests);\n              if (pullRequests.length >= 2) {\n                prCell = (\n                  <div>\n                    <span style={{background: \"#ff6f6f\"}}>Открыто несколько Pull Requests:</span>\n                    {pullRequests.map(pr => (\n                      <div key={pr.number} style={{display: \"flex\", alignItems: \"center\"}}>\n                        <span style={{marginRight: \"3px\"}}><Octicon icon={GitPullRequest} /></span>\n                        <span>\n                          <a href={pr.url}>{removeOrgName(pr.headLabel)}->{removeOrgName(pr.baseLabel)}</a>\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                );\n              } else if (pullRequests.length === 1) {\n                const pr = pullRequests[0];\n                prCell = prInfo(pr);\n                reviewCell = pr.reviewers.map(r =>\n                  (\n                    <div key={r} style={{display: \"flex\", alignItems: \"center\"}}>\n                      <GithubUserIcon login={r} /><a href={`http://github.com/${r}`}>@{r}</a>\n                    </div>\n                  )\n                );\n                ciStatusCell = Object.keys(pr.statuses).map(\n                  context => {\n                    const s = pr.statuses[context];\n                    var icon = null;\n                    if (s.state === \"success\") {\n                      icon = <span style={{color: \"#28a745\"}}><Octicon icon={Check} /></span>\n                    } else if (s.state === \"pending\") {\n                      icon = <span style={{color: \"#dbab09\"}}><Octicon icon={PrimitiveDot} /></span>\n                    } else {\n                      icon = <span style={{color: \"#cb2431\"}}><Octicon icon={X} /></span>\n                    }\n                    return (\n                      <span key={context} style={{display: \"flex\", alignItems: \"center\"}}>\n                        <a href={pr.statuses[context].targetURL}>{icon}</a>&nbsp;\n                        <a href={pr.statuses[context].targetURL}>{context}</a>\n                      </span>\n                    );\n                  }\n                );\n\n                tagsCell = pr.labels.map(l => (\n                    <div key={l.name} style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        backgroundColor: \"#\" + l.color,\n                        padding: \"4px\",\n                        borderRadius: \"2px\",\n                        //whiteSpace: \"nowrap\",\n                      }}>\n                      {l.name}\n                    </div>\n                  )\n                );\n\n                if (pr.project != null) {\n                  stageCell = <a href={pr.project.url}>{pr.project.columnName}</a>\n                }\n              } else if (pullRequests.length === 0) {\n                prCell = (\n                  <div>\n                    <div style={{background: \"#ff6f6f\"}}>Pull Request не открыт</div>\n                    Коммиты в бранчах:\n                    <ul>\n                      {s.branches.map(b => <li key={b.name}>{b.name} - {plural(b.authorCommits, '%d коммит', '%d коммита', '%d коммитов')}</li>)}\n                    </ul>\n                  </div>\n                );\n              }\n\n              return (\n                <TableRow key={id}>\n                  <TableCell padding=\"dense\">\n                    {indexCell}\n                  </TableCell>\n                  <TableCell padding=\"dense\">\n                    {nameCell}\n                  </TableCell>\n                  <TableCell padding=\"dense\">\n                    {prCell}\n                  </TableCell>\n                  <TableCell padding=\"dense\">\n                    {reviewCell}\n                  </TableCell>\n                  <TableCell padding=\"dense\">\n                    {ciStatusCell}\n                  </TableCell>\n                  <TableCell padding=\"dense\">\n                    {tagsCell}\n                  </TableCell>\n                  <TableCell padding=\"dense\">\n                    {stageCell}\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n\nAssignment.propTypes = {\n  assignment: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n  // root: {\n  //   width: '100%',\n  //   //marginTop: theme.spacing.unit * 3,\n  // },\n  // table: {\n  //   minWidth: 1020,\n  // },\n  // tableWrapper: {\n  //   overflowX: 'auto',\n  // },\n});\n\nAssignment = withStyles(styles)(Assignment);\n\n//const dataURL = `http://localhost:8080/data.json`;\nconst dataURL = `data.json`;\n\nclass App extends Component {\n  async componentDidMount() {\n    try {\n      const response = await fetch(dataURL);\n      const json = await response.json()\n      console.log(json); // XXX\n\n      // TODO: assuming that data is not empty\n      this.setState({\n        state: \"loaded\",\n        data: json.semesters[\"2018-autumn\"],\n        selectedIdx: 0\n      });\n    }\n    catch(error) {\n      this.setState({\n        state: \"failed\",\n        error: error\n      });\n    }\n  }\n\n  state = {\n    state: \"loading\",\n    error: null,\n    data: null,\n    selectedIdx: false,\n  };\n\n  handleChange = (event, idx) => {\n    this.setState({ selectedIdx: idx });\n  };\n\n  render() {\n    const { state, error, data, selectedIdx } = this.state;\n\n    if (state === \"loading\") {\n      return <div>Loading...</div>\n    } else if (state === \"failed\") {\n      return <div>Failed to load data: {error.toString()}</div>\n    } else {\n      console.assert(state === \"loaded\");\n\n      const assignmentIds = Object.keys(data.assignments)\n      assignmentIds.sort()\n\n      const tabs = assignmentIds.map((id) =>\n        <Tab label={data.assignments[id].name} key={id} />\n      );\n\n      return (\n        <div className=\"App\">\n          <AppBar position=\"static\" color=\"default\">\n            <Tabs\n              value={selectedIdx}\n              onChange={this.handleChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              scrollable\n              scrollButtons=\"auto\"\n            >\n              {tabs}\n            </Tabs>\n          </AppBar>\n          {selectedIdx !== false && <Assignment assignment={data.assignments[assignmentIds[selectedIdx]]} />}\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}